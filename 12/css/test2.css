a {
  display: inline-block;
  text-align: center;
  width: 200px;
  height: 220px;
  line-height: 220px;
  background-image: url(../../09/html/dog.jpg);
  background-position: center;
  text-decoration: none;
  background-size: cover;
  color: black;
}

a:hover {
  color: red;
  font-weight: bold;
  background-size: 120%;
}

a:focus {
  color: red;
  font-weight: bold;
  background-size: 110%;
  outline: none;
}

a:active {
  /* 클릭하고 있는 동안(클릭 후 마우스를 때기 전까지) 적용 */
  outline: 2px solid black;
}

/* P:nth-child(even) {
  
  주의사항 : p 태그 중 2번째가 아님!
  같은 레벨에 있는 자식 요소 중 2번째(a 태그까지 포함해서)

  해결방법 : 순서를 적용하고 싶은 것들을 div 태그로 묶어서 적용.
  
  color: red;
} */

.inner P:nth-child(even) {
  /* odd : 홀수, even : 짝수 */
  color: red;
  background-color: rgba(0, 0, 0, 0.2);
}

.inner p:first-child {
  /* 첫번째 자식 요소 */
  background-color: darksalmon;
}

.inner p:last-child {
  /* 마지막 자식 요소 */
  background-color: bisque;
}

.inner input:checked {
  background-color: cornflowerblue;
}

.inner .box {
  display: inline-block;
  width: 10px;
  height: 10px;
  border: 2px solid goldenrod;
  border-radius: 2px;
}
.inner input[type="checkbox"]:checked + label .box {
  color: blueviolet;
}

.inner input[type="checkbox"]:checked + label {
  color: blueviolet;
}

/* 가상 요소 : 가상의 요소를 만든다.*/
.inner {
  text-align: center;
}

.inner::after {
  /* ::after : 요소의 마지막에 가상의 요소를 하나 만들어낸다. */
  /* 말그대로 요소이기 때문에 css 속성을 적용 가능하다. */
  /* content 속성은 반드시 작성해야함!!! 넣지 않으면 가상 요소 생기지 않음.*/
  display: block;
  content: "after입니다.";
  color: red;
  font-weight: 700;
}
